<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="BoardMapper">

  <resultMap type="Board" id="BoardMap">
    <id column="board_id" property="no"/>
    <result column="title" property="title"/>
    <result column="contents" property="content"/>
    <result column="created_date" property="registeredDate"/>
    <result column="view_count" property="viewCount"/>
  </resultMap>
  
  <!-- selectList(sqlid, string) --> 
  <select id="selectBoard1" 
          resultMap="BoardMap" 
          parameterType="string">
    select 
      board_id,
      title, 
      contents, 
      created_date,
      view_count 
    from x_board
    order by #{colname} asc
    <!-- 
    위 문장에 파라미터 값을 넣으면 다음과 같다
    order by '헐...' asc 
    order by 'title' asc (파라미터로 넘어온 title이 문자열)
    mariaDB는 order by 절에 문자열이 오면 무시한다. CLI에서 해봐라
    sql오류는 아니다
    값을 넣는게 아니라 SQL문의 일부를 바꾸고 싶다! 그럼 ${}를 써라
    근데 사용자가 입력한 값이 그대로 들어가면 SQL문 삽입공격을 당할 수 있다
    그래서 보통 안쓰는데 필요한 경우가 있다
    나중에 게시판 만들때 배움
    -->
    <!-- #{}는 값을 삽입할 때 사용하고, 
         ${}는 SQL문을 삽입할 때 사용한다. -->
  </select>
  
  <!-- selectList(sqlid, string) --> 
  <select id="selectBoard2" 
          resultMap="BoardMap" 
          parameterType="string">
    select 
      board_id,
      title, 
      contents, 
      created_date,
      view_count 
    from x_board
    order by ${colname} asc
    <!-- 넘어오는게 String이더라도 ''이 안붙는다 -->
  </select>
  
  <!-- SQL 문에 SQL을 삽입하기
       => ${파라미터명}
       => 외부의 값을 이용하여 SQL 문장을 만들 수 있다.
       => 하지만 SQL 삽입 공격에 취약하다!
   -->
  <!-- selectList(sqlid, string) -->
  <select id="selectBoard3" 
          resultMap="BoardMap" parameterType="string">
    select 
      board_id,
      title, 
      contents, 
      created_date,
      view_count 
    from x_board
    ${sql}
  </select>
  
</mapper>







